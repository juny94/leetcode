class Solution:
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        n = len(s)
        if n == 0: return True
        if n%2 != 0: return False
        
        while '()' in s or '[]' in s or '{}' in s:
            s = s.replace('{}','').replace('()','').replace('[]','')
            
        if len(s) == 0: return True
        else: return False

class Solution2:
    # @return a boolean
    def isValid(self, s):
        stack = []
        dict = {"]":"[", "}":"{", ")":"("}
        for char in s:
            if char in dict.values():
                stack.append(char)
            elif char in dict.keys():
                if stack == [] or dict[char] != stack.pop():
                    return False
            else:
                return False
        return stack == []