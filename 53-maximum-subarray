class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        maximum = nums[0]
        rtn = nums[0]
        
        for i in range(1, len(nums)):
            if maximum > 0:
                maximum = maximum + nums[i]
            else:
                maximum = nums[i]
            if maximum > rtn:
                rtn = maximum            
        return rtn

class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        dp = [nums[0]]
        rtn = dp[0]
        
        
        for i in range(1, len(nums)):
            if dp[i-1] > 0:
                dp.append(dp[i-1] + nums[i])
            else: 
                dp.append(nums[i])
            rtn = max(rtn, dp[i])

        return rtn

class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        dp = [nums[0]]
        rtn = dp[0]
        
        
        for i in range(1, len(nums)):
            if dp[i-1] > 0:
                dp.append(dp[i-1] + nums[i])
            else: 
                dp.append(nums[i])

        return max(dp)