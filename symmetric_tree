# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isSymmetric(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        
        level = [root]
        level_n = [root]
        while root and level_n:
            level = level_n
            level_n = []
            value = []
            for node in level:
                if node.left: 
                    level_n.append(node.left)
                    value.append((node.left).val)
                else: value.append('null')
                if node.right: 
                    level_n.append(node.right)
                    value.append((node.right).val)
                else: value.append('null')
            if value[:len(value)//2] != (value[len(value)//2:])[::-1]: return False 
        return True